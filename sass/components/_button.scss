.btn {
  &:link,
  &:visited {
    text-decoration: none;
    text-transform: uppercase;
    padding: 1.5rem 4rem;
    display: inline-block;
    border-radius: 10rem;
    transition: all 0.2s;
    position: relative; /* to fix the position of .btn::after */
    font-size: $default-font-size;
  }

  &:hover {
    transform: translateY(-0.3rem);
    box-shadow: 0 1rem 2rem rgba($color-black, 0.2);
    &::after {
      transform: scaleX(1.4) scaleY(1.6);
      /* put transition property on the inital state i.e. .btn::after */
      opacity: 0; /* fade up the animation */
    }
  }

  &:active {
    transform: translateY(-0.1rem);
    box-shadow: 0 0.5rem 1rem rgba($color-black, 0.2);
  }

  &--white {
    background-color: $color-white;
    color: $color-grey-dark;
    &::after {
      /* For white color button, we also have to do this */
      background-color: $color-white;
    }
  }
  &--primary {
    background-color: $color-primary;
    color: $color-white;
    &::after {
      /* For white color button, we also have to do this */
      background-color: $color-primary;
    }
  }

  &::after {
    /* to add an element that looks exactly like the button that we already have, but we put it behind the button. And when we hover out of the button, then this hidden pseudo-element amazingly goes back behind the button. */
    content: ''; /* Always necessary,Otherwise it's not going to appear */
    display: inline-block; /* Because the button that we have is also an inline block. Always necessary,Otherwise it's not going to appear */
    height: 100%; /* same as parent */
    width: 100%; /* same as parent */
    border-radius: 10rem; /* same as parent */
    position: absolute; /* to put it behind actual button */
    /* This absolute position needs to have a reference, and ref is the first element with the relative position that is can find */
    top: 0;
    left: 0;
    z-index: -1;
    /* put transition property on the inital state i.e. .btn::after */
    transition: all 0.4s;
  }

  &--animated {
    animation: moveInBottom 0.5s ease-out 0.75s;
    animation-fill-mode: backwards; /* it will automatically apply the styles up to zero percent before the animation starts */
  }
}

.btn-text {
  &:link,
  &:visited {
    font-size: $default-font-size;
    color: $color-primary;
    display: inline-block;
    text-decoration: none;
    border-bottom: 1px solid $color-primary;
    padding: 3px;
    transition: all 0.2s;
  }

  &:hover {
    background-color: $color-primary;
    color: $color-white;
    box-shadow: 0 1rem 2rem rgba($color-black, 0.15);
    transform: translateY(-2px);
  }

  &:active {
    box-shadow: 0 0.5rem 1rem rgba($color-black, 0.15);
    transform: translateY(o);
  }
}
